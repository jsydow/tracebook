#summary Welche Operationen auf den Daten werden benoetigt

= Introduction =

Zum Testen verschiedener Speicheransaetze muss erst einmal festgestellt werden, welche Operationen auf Daten benoetigt werden.

= Details =

Das Datenmodell sieht folgendermassen aus:
  * DataStorage
  * DataMediaHolder
    * DataTrack
    * DataMapObject
      * DataNode
      * DataPointsList
  * DataMedia
  * (DataTrackInfo)

=== !DataStorage ===
DataStorage ist der Zugriffspunkt fuer die Daten. Er haelt den aktuellen Track.
  * Tracks anlegen
    * Waypointlogger
  * Tracks laden
    * Trackladebildschirm
  * Track speichern
    * Stoppen des Tracks (Waypointlogger) (implizit)
    * Optionsmenue der Karte (explizit)
  * Liste der Namen aller gespeicherten Tracks erzeugen
    * Trackladebildschirm
  * Verweis auf den aktuellen Track speichern
    * ueberall

=== !DataMediaHolder ===
Alle DataMediaHolder koennen Metadaten enthalten.
  * Medium hinzufuegen
    * Laden von Tracks
    * Benutzen der Aufnahmefunktionen
  * Medien loeschen
    * gar nicht, da Metadaten nicht editierbar
  * Medien laden/speichern
    * Laden/Speichern von Tracks
  * Liste aller Medien erzeugen
    * Liste ist fuer Benutzer noch nicht einsehbar
    * Listengroesse wird benutzt um festzustellen ob der Knoten wichtig ist

=== !DataTrack ===

=== !DataMapObject ===
Oberklasse fuer alle auf einer Map darstellbaren Primitive (Wege, Punkte, Flaechen). Speichert fuer jedes Objekt eine einzigartige Id und verschiedene Tags. Die Id wird zur Identifikation eines Objekts gebraucht.
  * Tags loeschen/auslesen/hinzufuegen
    * Punkteditierbildschirm
  * Id zurueckgeben
    * ueberall

=== !DataNode ===
Enthaelt eine Geokoordinate und den Verweis auf ein OverlayItem. Das Overlayitem wird zur Anzeige des Punktes auf der Karte benoetigt.
  * Vater-Pointslist finden
    * Karte
  * Geokoordinaten setzen/abfragen
    * Filtern
    * Waylogger
    * Anzeige der Punkte auf Karte und in Listenform
  * Overlayitem setzen/abfragen
    * Karte

=== !DataPointsList === 

=== !DataMedia ===

=== !DataTrackInfo ===
Wird benutzt um Daten zu einem Track anzuzeigen ohne ihn zu laden.
Die Daten (Kommentar, Zeit, Name, Datenanzahl) werden in einer extra XML-Datei gespeichert um sie schneller laden zu koennen.
  * Laden
    * Trackladebildschirm
  * Speichern
    * Speichern von Tracks
  * Getter-Methoden
    * Trackladebildschirm